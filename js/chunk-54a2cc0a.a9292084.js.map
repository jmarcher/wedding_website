{"version":3,"sources":["webpack:///./node_modules/local-storage/tracking.js","webpack:///./node_modules/local-storage/local-storage.js","webpack:///./src/notification.js","webpack:///./node_modules/local-storage/parse.js","webpack:///./node_modules/local-storage/stub.js"],"names":["parse","listeners","listening","listen","global","addEventListener","change","attachEvent","onstorage","e","event","all","key","fire","listener","newValue","oldValue","url","uri","forEach","on","fn","push","off","ns","length","splice","indexOf","module","exports","stub","tracking","ls","localStorage","accessor","value","arguments","get","set","raw","getItem","parsed","setItem","JSON","stringify","remove","removeItem","clear","backend","store","String","prototype","hashCode","c","hash","this","i","charCodeAt","notificationKey","notification","locale","setNotified","rawValue","parseValue","undefined","err","ms","found"],"mappings":"mHAAA,YAEA,IAAIA,EAAQ,EAAQ,QAChBC,EAAY,GACZC,GAAY,EAEhB,SAASC,IACHC,EAAOC,iBACTD,EAAOC,iBAAiB,UAAWC,GAAQ,GAClCF,EAAOG,YAChBH,EAAOG,YAAY,YAAaD,GAEhCF,EAAOI,UAAYF,EAIvB,SAASA,EAAQG,GACVA,IACHA,EAAIL,EAAOM,OAEb,IAAIC,EAAMV,EAAUQ,EAAEG,KAKtB,SAASC,EAAMC,GACbA,EAASd,EAAMS,EAAEM,UAAWf,EAAMS,EAAEO,UAAWP,EAAEQ,KAAOR,EAAES,KALxDP,GACFA,EAAIQ,QAAQN,GAQhB,SAASO,EAAIR,EAAKS,GACZpB,EAAUW,GACZX,EAAUW,GAAKU,KAAKD,GAEpBpB,EAAUW,GAAO,CAACS,IAEF,IAAdnB,GACFC,IAIJ,SAASoB,EAAKX,EAAKS,GACjB,IAAIG,EAAKvB,EAAUW,GACfY,EAAGC,OAAS,EACdD,EAAGE,OAAOF,EAAGG,QAAQN,GAAK,GAE1BpB,EAAUW,GAAO,GAIrBgB,EAAOC,QAAU,CACfT,GAAIA,EACJG,IAAKA,K,2DCpDP,YAEA,IAAIO,EAAO,EAAQ,QACf9B,EAAQ,EAAQ,QAChB+B,EAAW,EAAQ,QACnBC,EAAK,iBAAkB5B,GAAUA,EAAO6B,aAAe7B,EAAO6B,aAAeH,EAEjF,SAASI,EAAUtB,EAAKuB,GACtB,OAAyB,IAArBC,UAAUX,OACLY,EAAIzB,GAEN0B,EAAI1B,EAAKuB,GAGlB,SAASE,EAAKzB,GACZ,MAAM2B,EAAMP,EAAGQ,QAAQ5B,GACjB6B,EAASzC,EAAMuC,GACrB,OAAOE,EAGT,SAASH,EAAK1B,EAAKuB,GACjB,IAEE,OADAH,EAAGU,QAAQ9B,EAAK+B,KAAKC,UAAUT,KACxB,EACP,MAAO1B,GACP,OAAO,GAIX,SAASoC,EAAQjC,GACf,OAAOoB,EAAGc,WAAWlC,GAGvB,SAASmC,IACP,OAAOf,EAAGe,QAGZ,SAASC,EAASC,GAGhB,OAFAA,IAAUjB,EAAKiB,GAERjB,EAGTE,EAASI,IAAMA,EACfJ,EAASG,IAAMA,EACfH,EAASW,OAASA,EAClBX,EAASa,MAAQA,EACjBb,EAASc,QAAUA,EACnBd,EAASd,GAAKW,EAASX,GACvBc,EAASX,IAAMQ,EAASR,IAExBK,EAAOC,QAAUK,I,wJCnDjBgB,OAAOC,UAAUC,SAAW,WACxB,IAEIC,EAFAC,EAAO,EACX,GAAmB,GAAfC,KAAK9B,OAAa,OAAO6B,EAE7B,IAAK,IAAIE,EAAI,EAAGA,EAAID,KAAK9B,OAAQ+B,IAC7BH,EAAIE,KAAKE,WAAWD,GACpBF,GAASA,GAAQ,GAAKA,EAAQD,EAC9BC,GAAcA,EAElB,OAAOA,G,iBAKP,aAAc,uBACVC,KAAKG,gBAAkB,wBAWvBH,KAAKI,aAAe,K,4DAOE,IAAfC,EAAe,uDAAN,KAChB,OAAOL,KAAKI,aAAaC,K,2CAIzB,OAAyB,OAAtBL,KAAKI,cACJ3B,IAAGK,IAAIkB,KAAKG,mBAAqBH,KAAKD,O,oCAQ1CtB,IAAGM,IAAIiB,KAAKG,gBAAiBH,KAAKD,Q,sCAGtBM,GAGZ,OAFAL,KAAKM,cAEEN,KAAKI,aAAaC,K,2BAvBzB,OAAOjB,KAAKC,UAAUW,KAAKI,cAAcP,e,0CC5BjD,SAASpD,EAAO8D,GACd,MAAMrB,EAASsB,EAAWD,GAE1B,YAAeE,IAAXvB,EACK,KAGFA,EAGT,SAASsB,EAAYD,GACnB,IACE,OAAOnB,KAAK3C,MAAM8D,GAClB,MAAOG,GACP,OAAOH,GAIXlC,EAAOC,QAAU7B,G,kCClBjB,IAAIkE,EAAK,GAET,SAAS1B,EAAS5B,GAChB,OAAOA,KAAOsD,EAAKA,EAAGtD,GAAO,KAG/B,SAAS8B,EAAS9B,EAAKuB,GAErB,OADA+B,EAAGtD,GAAOuB,GACH,EAGT,SAASW,EAAYlC,GACnB,IAAIuD,EAAQvD,KAAOsD,EACnB,QAAIC,UACYD,EAAGtD,GAKrB,SAASmC,IAEP,OADAmB,EAAK,IACE,EAGTtC,EAAOC,QAAU,CACfW,QAASA,EACTE,QAASA,EACTI,WAAYA,EACZC,MAAOA","file":"js/chunk-54a2cc0a.a9292084.js","sourcesContent":["'use strict';\n\nvar parse = require('./parse');\nvar listeners = {};\nvar listening = false;\n\nfunction listen () {\n  if (global.addEventListener) {\n    global.addEventListener('storage', change, false);\n  } else if (global.attachEvent) {\n    global.attachEvent('onstorage', change);\n  } else {\n    global.onstorage = change;\n  }\n}\n\nfunction change (e) {\n  if (!e) {\n    e = global.event;\n  }\n  var all = listeners[e.key];\n  if (all) {\n    all.forEach(fire);\n  }\n\n  function fire (listener) {\n    listener(parse(e.newValue), parse(e.oldValue), e.url || e.uri);\n  }\n}\n\nfunction on (key, fn) {\n  if (listeners[key]) {\n    listeners[key].push(fn);\n  } else {\n    listeners[key] = [fn];\n  }\n  if (listening === false) {\n    listen();\n  }\n}\n\nfunction off (key, fn) {\n  var ns = listeners[key];\n  if (ns.length > 1) {\n    ns.splice(ns.indexOf(fn), 1);\n  } else {\n    listeners[key] = [];\n  }\n}\n\nmodule.exports = {\n  on: on,\n  off: off\n};\n","'use strict';\n\nvar stub = require('./stub');\nvar parse = require('./parse');\nvar tracking = require('./tracking');\nvar ls = 'localStorage' in global && global.localStorage ? global.localStorage : stub;\n\nfunction accessor (key, value) {\n  if (arguments.length === 1) {\n    return get(key);\n  }\n  return set(key, value);\n}\n\nfunction get (key) {\n  const raw = ls.getItem(key);\n  const parsed = parse(raw);\n  return parsed;\n}\n\nfunction set (key, value) {\n  try {\n    ls.setItem(key, JSON.stringify(value));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction remove (key) {\n  return ls.removeItem(key);\n}\n\nfunction clear () {\n  return ls.clear();\n}\n\nfunction backend (store) {\n  store && (ls = store);\n\n  return ls;\n}\n\naccessor.set = set;\naccessor.get = get;\naccessor.remove = remove;\naccessor.clear = clear;\naccessor.backend = backend;\naccessor.on = tracking.on;\naccessor.off = tracking.off;\n\nmodule.exports = accessor;\n","String.prototype.hashCode = function () {\n    let hash = 0;\n    if (this.length == 0) return hash;\n    let c;\n    for (let i = 0; i < this.length; i++) {\n        c = this.charCodeAt(i);\n        hash = ((hash << 5) - hash) + c;\n        hash = hash & hash; // Convert to 32bit integer\n    }\n    return hash;\n};\n\nimport ls from 'local-storage';\nexport default class {\n    constructor() {\n        this.notificationKey = 'jur_last_notification';\n        // this.notification = {\n        //     de: {\n        //         title: 'Neue lala',\n        //         body: 'This is tralala'\n        //     },\n        //     es: {\n        //         title: 'This is troloolo',\n        //         body: 'Tcosoto dno rpe orno'\n        //     }\n        // };\n        this.notification = null;\n    }\n\n    get hash() {\n        return JSON.stringify(this.notification).hashCode();\n    }\n\n    getMessage(locale = 'de') {\n        return this.notification[locale];\n    }\n\n    wasAlreadyNotified() {\n        if(this.notification === null) return true;\n        if (ls.get(this.notificationKey) !== this.hash) {\n            return false;\n        }\n\n        return true;\n    }\n\n    setNotified() {\n        ls.set(this.notificationKey, this.hash);\n    }\n\n    getNotification(locale) {\n        this.setNotified();\n\n        return this.notification[locale];\n    }\n}","'use strict';\n\nfunction parse (rawValue) {\n  const parsed = parseValue(rawValue);\n\n  if (parsed === undefined) {\n    return null;\n  }\n\n  return parsed;\n}\n\nfunction parseValue (rawValue) {\n  try {\n    return JSON.parse(rawValue);\n  } catch (err) {\n    return rawValue;\n  }\n}\n\nmodule.exports = parse;\n","'use strict';\n\nvar ms = {};\n\nfunction getItem (key) {\n  return key in ms ? ms[key] : null;\n}\n\nfunction setItem (key, value) {\n  ms[key] = value;\n  return true;\n}\n\nfunction removeItem (key) {\n  var found = key in ms;\n  if (found) {\n    return delete ms[key];\n  }\n  return false;\n}\n\nfunction clear () {\n  ms = {};\n  return true;\n}\n\nmodule.exports = {\n  getItem: getItem,\n  setItem: setItem,\n  removeItem: removeItem,\n  clear: clear\n};\n"],"sourceRoot":""}